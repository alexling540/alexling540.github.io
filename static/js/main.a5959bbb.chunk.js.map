{"version":3,"sources":["imgs/vaporwave_trees.png","components/menu.jsx","lib/ReactTyped.jsx","components/intro.jsx","lib/SectionTitle.jsx","components/about.jsx","lib/SkillsTable.jsx","components/resume.jsx","components/projects.jsx","components/contact.jsx","themes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuWrapper","styled","div","props","theme","accentColor","ThemeToggle","name","Navigation","nav","textColor","backgroundColor","Menu","id","viewClassName","onClick","toggleTheme","strokeWidth","src","vaporwave","alt","this","sections","map","element","index","data-menuanchor","anchor","key","href","icon","className","title","type","htmlFor","React","Component","ReactTyped","options","strings","typeSpeed","backSpeed","typed","Typed","el","destroy","style","whiteSpace","ref","Introduction","Fragment","renderWithFragment","Header","h1","SectionTitle","children","About","SkillRow","SkillsTable","skills","i","percent","strokeLinecap","trailColor","Resume","target","rel","createdAt","params","pagination","clickable","loop","Projects","image","desc","link","repo","Card","Img","variant","Body","Title","Text","Link","Contact","Form","Label","Group","controlId","Control","placeholder","as","rows","Button","darkTheme","backgroundColorOther","accentColor2","lightTheme","App","defaultTheme","useMediaPredicate","useState","setTheme","section","licenseKey","css3","menu","touchSensitivity","render","state","fullpageApi","Wrapper","data-anchor","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5959bbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vaporwave_trees.852e9fb0.png\";","import React, { useContext } from \"react\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport styled from \"styled-components\";\r\nimport * as Icon from 'react-feather';\r\nimport './menu.scss';\r\nimport vaporwave from '../imgs/vaporwave_trees.png';\r\n\r\nconst MenuWrapper = styled.div`\r\n  .active a {\r\n    color: ${props => props.theme.accentColor};\r\n  }\r\n`;\r\nconst ThemeToggle = styled.div`\r\n  background: ${props => props.theme.accentColor};\r\n  div:nth-child(1) {\r\n    visibility: ${props => props.theme.name === 'dark' ? 'visible' : 'hidden'};\r\n    opacity: ${props => props.theme.name === 'dark' ? 1 : 0};\r\n  }\r\n  div:nth-child(2) {\r\n    visibility: ${props => props.theme.name === 'light' ? 'visible' : 'hidden'};\r\n    opacity: ${props => props.theme.name === 'light' ? 1 : 0};\r\n  }\r\n  div:nth-child(3) {\r\n    visibility: ${props => props.theme.name === 'vaporwave' ? 'visible' : 'hidden'};\r\n    opacity: ${props => props.theme.name === 'vaporwave' ? 1 : 0};\r\n  }\r\n`;\r\nconst Navigation = styled.nav`\r\n  li {\r\n    color: ${props => props.theme.textColor};\r\n    svg {\r\n      background-image: linear-gradient(to bottom, transparent 50%, ${props => props.theme.accentColor} 50%);\r\n      stroke: ${props => props.theme.accentColor};\r\n    }\r\n    &.active svg {\r\n      stroke: ${props => props.theme.backgroundColor};\r\n    }\r\n    img {\r\n      background-image: linear-gradient(to bottom, transparent 50%, ${props => props.theme.accentColor} 50%);\r\n    }\r\n    a:after {\r\n      background: ${props => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <MenuWrapper id={'menu'}>\r\n        <BrowserView viewClassName={'menu-desktop'}>\r\n          <ThemeToggle id={'themeToggle'} onClick={() => this.props.toggleTheme()}>\r\n            <div>\r\n              <Icon.Moon strokeWidth={'1.5'}/>\r\n            </div>\r\n            <div>\r\n              <Icon.Sun strokeWidth={'1.5'}/>\r\n            </div>\r\n            <div>\r\n              <img src={vaporwave} alt={''}/>\r\n            </div>\r\n          </ThemeToggle>\r\n          <Navigation>\r\n            <ul>\r\n              {this.props.sections.map((element, index) => (\r\n                <li data-menuanchor={element.anchor} key={index}>\r\n                  <a href={'#' + element.anchor}>\r\n                    {element.icon}\r\n                  </a>\r\n                  <div className={'nav-title'} key={index}>{element.title}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </Navigation>\r\n        </BrowserView>\r\n        <MobileView viewClassName={'menu-mobile'}>\r\n          <input id=\"burgerCheckbox\" type=\"checkbox\"/>\r\n          <label htmlFor=\"burgerCheckbox\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </label>\r\n          <nav>\r\n            <ul>\r\n              {this.props.sections.map((element, index) => (\r\n                <li data-menuanchor={element.anchor} key={index}>\r\n                  <a href={'#' + element.anchor}>{element.title}</a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </MobileView>\r\n      </MenuWrapper>\r\n    )\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport Typed from 'typed.js';\r\n\r\nexport default class ReactTyped extends Component {\r\n  componentDidMount() {\r\n    // If you want to pass more options as props, simply add\r\n    // your desired props to this destructuring assignment.\r\n    const { strings } = this.props;\r\n    // You can pass other options here, such as typing speed, back speed, etc.\r\n    const options = {\r\n      strings: strings,\r\n      typeSpeed: 50,\r\n      backSpeed: 50\r\n    };\r\n    // this.el refers to the <span> in the render() method\r\n    this.typed = new Typed(this.el, options);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Make sure to destroy Typed instance on unmounting\r\n    // to prevent memory leaks\r\n    this.typed.destroy();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrap\">\r\n        <div className=\"type-wrap\">\r\n          <span\r\n            style={{ whiteSpace: 'pre' }}\r\n            ref={(el) => { this.el = el; }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport {BrowserView, MobileView} from \"react-device-detect\";\r\nimport ReactTyped from \"../lib/ReactTyped\";\r\nimport {ChevronDown} from \"react-feather\";\r\nimport './intro.scss';\r\n\r\nexport default class Introduction extends Component {\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <BrowserView renderWithFragment>\r\n          <div className={'intro-picture'} style={{\r\n            // 'backgroundImage': \"url('https://images.pexels.com/photos/956999/milky-way-starry-sky-night-sky-star-956999.jpeg')\"\r\n            'backgroundImage': \"url('https://images.pexels.com/photos/207130/pexels-photo-207130.jpeg')\"\r\n          }}>\r\n          </div>\r\n          <div className={'intro-banner'}>\r\n            <ReactTyped\r\n              strings={[\r\n                'Welcome'\r\n              ]}\r\n            />\r\n          </div>\r\n          <ChevronDown className={'intro-down'}/>\r\n        </BrowserView>\r\n        <MobileView renderWithFragment>\r\n          Welcome\r\n        </MobileView>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.h1`\r\n  color: ${props => props.theme.textColor};\r\n  &:first-letter {\r\n    color: ${props => props.theme.accentColor};\r\n  }\r\n`;\r\n\r\nclass SectionTitle extends React.Component {\r\n  render() {\r\n    return(\r\n      <Header>\r\n        {this.props.children}\r\n      </Header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SectionTitle;","import React from \"react\";\r\nimport './about.scss'\r\nimport SectionTitle from \"../lib/SectionTitle\";\r\n\r\nexport default class About extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <SectionTitle>About Me</SectionTitle>\r\n        <div>\r\n          <img src={''} alt={''} />\r\n        </div>\r\n        <div>\r\n          ETC ETC ETC\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Line } from \"rc-progress\";\r\nimport \"./SkillsTable.scss\";\r\n\r\nconst SkillRow = styled.div`\r\n  .skills-title {\r\n    color: ${props => props.theme.textColor};\r\n  }\r\n  .skill-name {\r\n    color: ${props => props.theme.textColor};\r\n  }\r\n  .skill-line {\r\n    border-color: ${props => props.theme.accentColor};\r\n    .rc-progress-line-path {\r\n      stroke: ${props => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class SkillsTable extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <div style={this.props.style} className={'skills-table'}>\r\n        <div className={'skills-title'}>Skills</div>\r\n        {this.props.skills.map((element, i) => (\r\n          <SkillRow key={i} className={'skill-row'}>\r\n            <span className={'skill-name'}>{element.name}</span>\r\n            <Line className={'skill-line'} percent={element.percent} strokeLinecap=\"square\" trailColor={'transparent'}/>\r\n          </SkillRow>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport * as Icons from 'react-feather';\r\nimport { Timeline, TimelineEvent } from \"react-event-timeline\";\r\nimport SkillsTable from \"../lib/SkillsTable\";\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport './resume.scss';\r\n\r\nexport default class Resume extends Component {\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <h1>Resume</h1>\r\n        <a href={'https://drive.google.com/file/d/1K1iig6_iW95FU5qU2SLp9ZqPaJKFrN82/view?usp=sharing'} target=\"_blank\" rel=\"noopener noreferrer\" id={'download-resume'}>\r\n          <span>\r\n            <span>\r\n              View Resume\r\n            </span>\r\n            <Icons.Download/>\r\n          </span>\r\n        </a>\r\n        <div className={'half'}>\r\n          <Timeline>\r\n            <TimelineEvent title=\"Texas A&M University\"\r\n                           createdAt=\"2018-Present\"\r\n            >\r\n              Studying Computer Science at Texas A&M University\r\n            </TimelineEvent>\r\n          </Timeline>\r\n        </div>\r\n        <div className={'half'}>\r\n          <SkillsTable\r\n            skills={[\r\n              {name: 'Test', percent: 60},\r\n              {name: 'Test two', percent: 20}\r\n            ]}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport {BrowserView, MobileView} from \"react-device-detect\";\r\nimport Swiper from 'react-id-swiper';\r\nimport {\r\n  Card,\r\n  CardColumns\r\n} from \"react-bootstrap\";\r\nimport './projects.scss';\r\nimport 'swiper/swiper.scss';\r\n\r\nconst params = {\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n    type: 'bullets',\r\n    clickable: false\r\n  },\r\n  loop: true\r\n};\r\n\r\nexport default class Projects extends Component {\r\n\r\n  render() {\r\n    const cards = [\r\n      {\r\n        title: 'Ag\\'s Guide to Foods And Brews',\r\n        image: '',\r\n        desc: 'Vue, Vuetify, Axios',\r\n        link: 'https://pages.github.tamu.edu/jarrett/Group7FinalProject/#/',\r\n        repo: 'https://github.tamu.edu/jarrett/Group7FinalProject'\r\n      },\r\n      {\r\n        title: 'Test',\r\n        image: '',\r\n        desc: '',\r\n        repo: 'https://github.tamu.edu/peterluong/group14databaseproject'\r\n      }\r\n    ];\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <h1>Projects</h1>\r\n        {/*<BrowserView renderWithFragment>*/}\r\n        {/*  <CardColumns>*/}\r\n        {/*    {cards.map((element, i) => (*/}\r\n        {/*      <Card key={i}>*/}\r\n        {/*        <Card.Img variant=\"top\" src={element.image} />*/}\r\n        {/*        <Card.Body>*/}\r\n        {/*          <Card.Title>{element.title}</Card.Title>*/}\r\n        {/*          <Card.Text>{element.desc}</Card.Text>*/}\r\n        {/*          <Card.Link href={element.link}>Live</Card.Link>*/}\r\n        {/*          <Card.Link href={element.repo}>Github</Card.Link>*/}\r\n        {/*        </Card.Body>*/}\r\n        {/*      </Card>*/}\r\n        {/*    ))}*/}\r\n        {/*  </CardColumns>*/}\r\n        {/*</BrowserView>*/}\r\n        {/*<MobileView renderWithFragment>*/}\r\n        {/*  <Carousel interval={null} controls={false}>*/}\r\n        {/*    {cards.map((element, i) => (*/}\r\n        {/*      <CarouselItem as={'Card'} key={i}>*/}\r\n        {/*        <Card>*/}\r\n        {/*          <Card.Img variant=\"top\" src={element.image} />*/}\r\n        {/*          <Card.Body>*/}\r\n        {/*            <Card.Title>{element.title}</Card.Title>*/}\r\n        {/*            <Card.Text>{element.desc}</Card.Text>*/}\r\n        {/*            <Card.Link href={element.link}>Live</Card.Link>*/}\r\n        {/*            <Card.Link href={element.repo}>Github</Card.Link>*/}\r\n        {/*          </Card.Body>*/}\r\n        {/*        </Card>*/}\r\n        {/*      </CarouselItem>*/}\r\n        {/*    ))}*/}\r\n        {/*  </Carousel>*/}\r\n        <Swiper {...params}>\r\n          {cards.map((element, i) => (\r\n            <div key={i}>\r\n              <Card >\r\n                <Card.Img variant=\"top\" src={element.image} />\r\n                <Card.Body>\r\n                  <Card.Title>{element.title}</Card.Title>\r\n                  <Card.Text>{element.desc}</Card.Text>\r\n                  <Card.Link href={element.link}>Live</Card.Link>\r\n                  <Card.Link href={element.repo}>Github</Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </Swiper>\r\n        {/*</MobileView>*/}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport * as Icons from 'react-feather';\r\nimport './contact.scss';\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Contact Me</h1>\r\n        <div className={'half'} style={{'textAlign':'left'}}>\r\n          <ul>\r\n            <li>\r\n              <a href={'#section-contact'}>\r\n                <div>\r\n                  <Icons.Phone/>\r\n                  <span>Phone</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'mailto:alexling.js@gmail.com'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.Mail/>\r\n                  <span>alexling.js@gmail.com</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'https://github.com/alexling540'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.GitHub/>\r\n                  <span>alexling540</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'https://www.linkedin.com/in/alexander-ling-6b8a28178/'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.Linkedin/>\r\n                  <span>alexander-ling-6b8a28178/</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className={'half'}>\r\n          <Form>\r\n            <Form.Label>\r\n            </Form.Label>\r\n            <Form.Group controlId=\"contact-Name\">\r\n              <Form.Control type=\"text\" placeholder={'Your Name'} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"contact-Email\">\r\n              <Form.Control type=\"email\" placeholder={'Your Email'} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Control as=\"textarea\" rows=\"3\" placeholder={'Your message...'} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","export const darkTheme = {\r\n  name: 'dark',\r\n  textColor: 'white',\r\n  backgroundColor: '#222629', // dark-accent3\r\n  backgroundColorOther: '#16191b', // dark-accent6\r\n  accentColor: '#86C232', // dark-accent2\r\n  accentColor2: '#61892F'\r\n};\r\n\r\nexport const lightTheme = {\r\n  name: 'light',\r\n  textColor: 'black',\r\n  backgroundColor: '#EAE7DC', // lv2-accent1\r\n  backgroundColorOther: '#D8C3A5', // lv2-accent2\r\n  accentColor: '#E85A4F', // lv2-accent5\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  Home as IntroIcon,\r\n  User as AboutIcon,\r\n  FileText as ResumeIcon,\r\n  Package as ProjectsIcon,\r\n  Info as ContactIcon\r\n} from 'react-feather';\r\nimport 'typeface-lato';\r\nimport './App.scss';\r\nimport Menu from './components/menu';\r\nimport Introduction from './components/intro';\r\nimport About from './components/about';\r\nimport Resume from './components/resume';\r\nimport Projects from './components/projects';\r\nimport Contact from './components/contact';\r\nimport {darkTheme, lightTheme} from \"./themes\";\r\n\r\n// https://visme.co/blog/website-color-schemes/\r\n// https://fonts.google.com/specimen/Lato?selection.family=Lato\r\n// https://gist.github.com/CodeMyUI/5376e109921ab4609c1857cf8010c4b8\r\n// https://stackoverflow.com/questions/20751937/transition-background-color-via-slide-up-animation\r\n// https://feathericons.com/\r\n// https://postimg.cc/hXjzGPV5 vaporwave\r\n// https://github.com/stephane-monnot/react-vertical-timeline\r\n\r\nfunction App() {\r\n\r\n  const defaultTheme = useMediaPredicate('(prefers-color-scheme: light)') ? 'light' : 'dark';\r\n  const [theme, setTheme] = useState(defaultTheme);\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else if (theme === 'dark') {\r\n      setTheme('light');\r\n    } else {\r\n      setTheme(defaultTheme);\r\n    }\r\n  };\r\n\r\n  const sections = [\r\n    { anchor: 'section-intro',    title: 'Home',     icon: (<IntroIcon/>),     section: (<Introduction/>) },\r\n    { anchor: 'section-about',    title: 'About',    icon: (<AboutIcon/>),     section: (<About/>) },\r\n    { anchor: 'section-resume',   title: 'Resume',   icon: (<ResumeIcon/>),    section: (<Resume/>) },\r\n    { anchor: 'section-projects', title: 'Projects', icon: (<ProjectsIcon/>),  section: (<Projects/>) },\r\n    { anchor: 'section-contact',  title: 'Contact',  icon: (<ContactIcon/>),   section: (<Contact/>) }\r\n  ];\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n      <div className=\"App\" theme={theme}>\r\n        <Menu toggleTheme={toggleTheme} sections={sections} />\r\n        <ReactFullpage\r\n          licenseKey={'OPEN-SOURCE-GPLV3-LICENSE'}\r\n          css3={true}\r\n          menu={'#menu'}\r\n          touchSensitivity={10}\r\n          render={({state, fullpageApi}) => {\r\n            return (\r\n              <ReactFullpage.Wrapper>\r\n                {sections.map((element, index) => (\r\n                  <div className={'section'} data-anchor={element.anchor} key={index}>\r\n                    {element.section}\r\n                  </div>\r\n                ))}\r\n              </ReactFullpage.Wrapper>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}