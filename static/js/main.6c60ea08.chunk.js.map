{"version":3,"sources":["imgs/vaporwave_trees.png","components/menu.jsx","components/intro.jsx","components/about.jsx","components/resume.jsx","components/projects.jsx","components/blog.jsx","components/contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","props","id","onClick","setTheme","strokeWidth","src","vaporwave","alt","this","sections","map","element","index","data-menuanchor","anchor","key","href","icon","title","type","htmlFor","Component","Introduction","About","className","Resume","target","rel","Projects","Blog","Contact","style","Form","Label","Group","controlId","Control","placeholder","as","rows","Button","variant","App","defaultTheme","useMediaPredicate","useState","palette","theme","section","allowedKeys","37","38","39","40","65","66","konamiCode","konamiCodePosition","document","addEventListener","e","keyCode","length","licenseKey","css3","menu","render","state","fullpageApi","Wrapper","data-anchor","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c60ea08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vaporwave_trees.852e9fb0.png\";","import React, {Component} from \"react\";\r\nimport * as Icon from 'react-feather';\r\nimport './menu.scss';\r\nimport vaporwave from '../imgs/vaporwave_trees.png';\r\n\r\nexport default class Menu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id={'menu'}>\r\n        <div id={'menu-desktop'}>\r\n          <div id={'themeToggle'}>\r\n            <div onClick={() => this.props.setTheme('light')}>\r\n              <Icon.Moon strokeWidth={'1.5'}/>\r\n            </div>\r\n            <div onClick={() => this.props.setTheme('dark')}>\r\n              <Icon.Sun strokeWidth={'1.5'}/>\r\n            </div>\r\n            <div onClick={() => this.props.setTheme('dark')}>\r\n              <img src={vaporwave} alt={''}/>\r\n            </div>\r\n          </div>\r\n          <ul>\r\n            {this.props.sections.map((element, index) => (\r\n              <li data-menuanchor={element.anchor} key={index}>\r\n                <a href={'#' + element.anchor}>\r\n                  {element.icon}\r\n                </a>\r\n                <div id={'title'} key={index}>{element.title}</div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div id={'menu-mobile'}>\r\n          <input id=\"burgerCheckbox\" type=\"checkbox\"/>\r\n          <label htmlFor=\"burgerCheckbox\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </label>\r\n          <nav>\r\n            <ul>\r\n              {this.props.sections.map((element, index) => (\r\n                <li data-menuanchor={element.anchor} key={index}>\r\n                  <a href={'#' + element.anchor}>{element.title}</a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Introduction extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          Welcome\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport './about.scss'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About Me</h1>\r\n        <div className={'vertical'}>\r\n          About Me\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport * as Icons from 'react-feather';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport './resume.scss';\r\n\r\nexport default class Resume extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div className={'vertical'}>\r\n          Resume\r\n        </div>\r\n        <h1>Resume</h1>\r\n        <a href={'https://drive.google.com/file/d/1K1iig6_iW95FU5qU2SLp9ZqPaJKFrN82/view?usp=sharing'} target=\"_blank\" rel=\"noopener noreferrer\" id={'download-resume'}>\r\n          <span>\r\n            <span>\r\n              Resume\r\n            </span>\r\n            <Icons.Download/>\r\n          </span>\r\n        </a>\r\n        {/*<div>\r\n        <VerticalTimeline\r\n          animate={false}\r\n          layout={'1-column'}\r\n        >\r\n          <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--work\"\r\n            date=\"April 2013\"\r\n            iconStyle={{ background: 'rgb(233, 30, 99)', color: '#fff' }}\r\n          >\r\n            <h3 className=\"vertical-timeline-element-title\">Content Marketing for Web, Mobile and Social Media</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">Online Course</h4>\r\n            <p>\r\n              Strategy, Social Media\r\n            </p>\r\n          </VerticalTimelineElement>\r\n          <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--work\"\r\n            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\r\n            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\r\n            date=\"2011 - present\"\r\n            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\r\n          >\r\n            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\r\n            <p>\r\n              Creative Direction, User Experience, Visual Design, Project Management, Team Leading\r\n            </p>\r\n          </VerticalTimelineElement>\r\n        </VerticalTimeline>\r\n        </div>*/}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Projects extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Projects</h1>\r\n        <div className={'vertical'}>\r\n          Projects\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Blog extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div className={'vertical'}>\r\n          Blog\r\n        </div>\r\n        <h1>Blog</h1>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport * as Icons from 'react-feather';\r\nimport './contact.scss';\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Contact Me</h1>\r\n        <div className={'half'} style={{'textAlign':'left'}}>\r\n          <ul>\r\n            <li>\r\n              <a href={'#section-contact'}>\r\n                <div>\r\n                  <Icons.Phone/>\r\n                  <span>Phone</span>\r\n\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'mailto:alexling.js@gmail.com'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.Mail/>\r\n                  <span>alexling.js@gmail.com</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'https://github.com/alexling540'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.GitHub/>\r\n                  <span>alexling540</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href={'https://www.linkedin.com/in/alexander-ling-6b8a28178/'} target='_blank' rel='noopener noreferrer'>\r\n                <div>\r\n                  <Icons.Linkedin/>\r\n                  <span>alexander-ling-6b8a28178/</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className={'half'}>\r\n          <Form>\r\n            <Form.Label>\r\n            </Form.Label>\r\n            <Form.Group controlId=\"contact-Name\">\r\n              <Form.Control type=\"text\" placeholder={'Your Name'} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"contact-Email\">\r\n              <Form.Control type=\"email\" placeholder={'Your Email'} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Control as=\"textarea\" rows=\"3\" placeholder={'Your message...'} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\nimport * as Icon from 'react-feather';\r\nimport 'typeface-lato';\r\nimport './App.scss';\r\nimport Menu from './components/menu';\r\nimport Introduction from './components/intro';\r\nimport About from './components/about';\r\nimport Resume from './components/resume';\r\nimport Projects from './components/projects';\r\nimport Blog from './components/blog';\r\nimport Contact from './components/contact';\r\n\r\n// https://visme.co/blog/website-color-schemes/\r\n// https://fonts.google.com/specimen/Lato?selection.family=Lato\r\n// https://gist.github.com/CodeMyUI/5376e109921ab4609c1857cf8010c4b8\r\n// https://stackoverflow.com/questions/20751937/transition-background-color-via-slide-up-animation\r\n// https://feathericons.com/\r\n// https://postimg.cc/hXjzGPV5 vaporwave\r\n// https://github.com/stephane-monnot/react-vertical-timeline\r\n\r\nfunction App() {\r\n\r\n  const defaultTheme = useMediaPredicate('(prefers-color-scheme: light)') ? \"light\" : \"dark\";\r\n\r\n  const [theme, setTheme] = useState({\r\n    palette: defaultTheme\r\n  });\r\n\r\n  const sections = [\r\n    {\r\n      anchor:'section-intro',\r\n      title: 'Home',\r\n      icon: (<Icon.Home/>),\r\n      section: (<Introduction/>)\r\n    },\r\n    {\r\n      anchor: 'section-about',\r\n      title: 'About',\r\n      icon: (<Icon.User/>),\r\n      section: (<About/>)\r\n    },\r\n    {\r\n      anchor: 'section-resume',\r\n      title: 'Resume',\r\n      icon: (<Icon.FileText/>),\r\n      section: (<Resume/>)\r\n    },\r\n    {\r\n      anchor: 'section-projects',\r\n      title: 'Projects',\r\n      icon: (<Icon.Package/>),\r\n      section: (<Projects/>)\r\n    },\r\n    {\r\n      anchor: 'section-blog',\r\n      title: 'Blog',\r\n      icon: (<Icon.Book/>),\r\n      section: (<Blog/>)\r\n    },\r\n    {\r\n      anchor: 'section-contact',\r\n      title: 'Contact',\r\n      icon: (<Icon.Info/>),\r\n      section: (<Contact/>)\r\n    }\r\n  ];\r\n\r\n  const allowedKeys = {\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down',\r\n    65: 'a',\r\n    66: 'b'\r\n  };\r\n  // the 'official' Konami Code sequence Change this to you code\r\n  const konamiCode = ['up', 'up', 'down', 'down', 'left', 'right', 'left', 'right', 'b', 'a'];\r\n  // a variable to remember the 'position' the user has reached so far.\r\n  let konamiCodePosition = 0;\r\n  document.addEventListener('keydown', (e) => {\r\n    let key = allowedKeys[e.keyCode];\r\n    // get the value of the required key from the konami code\r\n    let requiredKey = konamiCode[konamiCodePosition];\r\n    // compare the key with the required key\r\n    if (key === requiredKey) {\r\n      // move to the next key in the konami code sequence\r\n      konamiCodePosition++;\r\n      // if the last key is reached, activate cheats\r\n      if (konamiCodePosition === konamiCode.length) {\r\n        setTheme({palette: 'vaporwave'});\r\n        konamiCodePosition = 0;\r\n      }\r\n    } else {\r\n      konamiCodePosition = 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\" theme={theme.palette}>\r\n      <Menu setTheme={(palette) => setTheme({palette})} sections={sections} />\r\n      <ReactFullpage\r\n        licenseKey={'OPEN-SOURCE-GPLV3-LICENSE'}\r\n        css3={true}\r\n        menu={'#menu'}\r\n        render={({state, fullpageApi}) => {\r\n          return (\r\n            <ReactFullpage.Wrapper>\r\n              {sections.map((element, index) => (\r\n                <div className={'section'} data-anchor={element.anchor} key={index}>\r\n                  {element.section}\r\n                </div>\r\n              ))}\r\n            </ReactFullpage.Wrapper>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}